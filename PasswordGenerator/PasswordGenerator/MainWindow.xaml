<Window x:Class="PasswordGenerator.MainWindow"
        d:DataContext="{d:DesignInstance local:MainWindow}"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PasswordGenerator"
        xmlns:controls="clr-namespace:PasswordGenerator.Controls"
        mc:Ignorable="d"
        Background="{StaticResource {x:Static SystemColors.MenuBarBrushKey}}"
        Cursor="Hand"
        ResizeMode="NoResize"
        Title="Password Generator"
        MinWidth="450" MinHeight="450"
        Width="450" Height="450"
        MaxWidth="450" MaxHeight="450">

    <Grid Margin="35 15 35 15">
        <Grid.RowDefinitions>
            <RowDefinition Height="55"></RowDefinition>
            <RowDefinition Height="*"/>
            <RowDefinition Height="60"></RowDefinition>
            <RowDefinition Height="40"></RowDefinition>
        </Grid.RowDefinitions>

        <Label Grid.Row="0"
               Content="Password Generator"
               Foreground="#FF2B76E2"
               FontSize="25" FontWeight="Bold"
               FontFamily="Georgia"
               HorizontalAlignment="Center" VerticalAlignment="Center"/>
        <StackPanel Grid.Row="1"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid Height="45">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="160"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0"
                       Content="Length:"
                       FontSize="14"
                       HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                <controls:IntegerUpDown Grid.Column="1"
                                        Minimum="{Binding Path=MinLength, Mode=TwoWay}"
                                        Maximum="{Binding Path=MaxLength, Mode=TwoWay}"
                                        Value="{Binding Path=Length, Mode=TwoWay}"
                                        Step="1"
                                        FontSize="14"
                                        HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                        HorizontalAlignment="Stretch" VerticalAlignment="Center">
                    <controls:IntegerUpDown.Background>
                        <LinearGradientBrush EndPoint="0 1" StartPoint="0 0">
                            <GradientStop Color="#FFF0F0F0" Offset="0"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                    </controls:IntegerUpDown.Background>
                </controls:IntegerUpDown>
            </Grid>
            <Grid Height="45">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="160"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0"
                       Content="Include lowercase characters:"
                       FontSize="14"
                       HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                <CheckBox Grid.Column="1"
                          Content=" abcde..."
                          IsChecked="{Binding Path=IncludeLowerCaseCharacters, Mode=TwoWay}"
                          HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>
            <Grid Height="45">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="160"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0"
                       Content="Include uppercase characters:"
                       FontSize="14"
                       HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                <CheckBox Grid.Column="1"
                          Content=" ABCDE..."
                          IsChecked="{Binding Path=IncludeUpperCaseCharacters, Mode=TwoWay}"
                          HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>
            <Grid Height="45">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="160"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0"
                       Content="Include digits:"
                       FontSize="14"
                       HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                <CheckBox Grid.Column="1"
                          Content=" 12345..."
                          IsChecked="{Binding Path=IncludeDigits, Mode=TwoWay}"
                          HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>
            <Grid Height="45">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="160"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0"
                       Content="Include special characters:"
                       FontSize="14"
                       HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                <CheckBox Grid.Column="1"
                          Content=" ?!@#$%^&amp;*"
                          IsChecked="{Binding Path=IncludeSpecialCharacters, Mode=TwoWay}"
                          HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>
        </StackPanel>
        <TextBox Grid.Row="2"
                 x:Name="PasswordTextBox"
                 MinHeight="50"
                 Text="Click on the generate button"
                 FocusVisualStyle="{x:Null}"
                 Background="{StaticResource {x:Static SystemColors.MenuBarBrushKey}}"
                 BorderBrush="#FF0051FF"
                 FontSize="15" FontWeight="Bold"
                 IsReadOnly="True"
                 IsReadOnlyCaretVisible="False"
                 HorizontalAlignment="Stretch" VerticalAlignment="Center"
                 HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                 BorderThickness="1"
                 Margin="5"/>
        <Button Grid.Row="3"
                Width="150" Height="30"
                Content="Generate"
                FontSize="15"
                FontFamily="Segoe UI Semibold"
                IsEnabled="{Binding Path=GenerationEnabled, Mode=TwoWay}"
                HorizontalAlignment="Center" VerticalAlignment="Center"
                BorderThickness="0"
                Margin="5"
                Click="GeneratePasswordButton_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF2D89EF"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Background"
                                    Value="#FF0D629F"/>
                            <Setter Property="Foreground"
                                    Value="#FFBEBEBE"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#FF2FAFF8"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</Window>
